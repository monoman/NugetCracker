//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.488
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NuGet.VisualStudio.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class VsResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal VsResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NuGet.VisualStudio.Resources.VsResources", typeof(VsResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All.
        /// </summary>
        public static string AggregateSourceName {
            get {
                return ResourceManager.GetString("AggregateSourceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find &apos;{0}&apos; in &apos;{1}&apos; and found multiple versions of &apos;{0}&apos; installed. Please specify a version..
        /// </summary>
        public static string AmbiguousProjectLevelUninstal {
            get {
                return ResourceManager.GetString("AmbiguousProjectLevelUninstal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found multiple versions of &apos;{0}&apos; installed. Please specify a version..
        /// </summary>
        public static string AmbiguousUninstall {
            get {
                return ResourceManager.GetString("AmbiguousUninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to update &apos;{0}&apos;. Found multiple versions installed..
        /// </summary>
        public static string AmbiguousUpdate {
            get {
                return ResourceManager.GetString("AmbiguousUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some NuGet packages are missing from this solution. Click to restore..
        /// </summary>
        public static string AskForRestoreMessage {
            get {
                return ResourceManager.GetString("AskForRestoreMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A new version of NuGet Package Manager is available..
        /// </summary>
        public static string AskForUpdateMessage {
            get {
                return ResourceManager.GetString("AskForUpdateMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Each package is licensed to you by its owner. NuGet is not responsible for, nor does it grant any licenses to, third-party packages. Some packages may include dependencies which are governed by additional licenses. Follow the package source (feed) URL to determine any dependencies..
        /// </summary>
        public static string Console_DisclaimerText {
            get {
                return ResourceManager.GetString("Console_DisclaimerText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;get-help NuGet&apos; to see all available NuGet commands..
        /// </summary>
        public static string Console_HelpText {
            get {
                return ResourceManager.GetString("Console_HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to initialize the PowerShell host. If your PowerShell execution policy setting is set to AllSigned, open the Package Manager Console to initialize the host first..
        /// </summary>
        public static string Console_InitializeHostFails {
            get {
                return ResourceManager.GetString("Console_InitializeHostFails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added file &apos;{0}&apos; to project &apos;{1}&apos;.
        /// </summary>
        public static string Debug_AddedFileToProject {
            get {
                return ResourceManager.GetString("Debug_AddedFileToProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added reference &apos;{0}&apos; to project &apos;{1}&apos;.
        /// </summary>
        public static string Debug_AddReference {
            get {
                return ResourceManager.GetString("Debug_AddReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removed file &apos;{0}&apos;.
        /// </summary>
        public static string Debug_RemovedFile {
            get {
                return ResourceManager.GetString("Debug_RemovedFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removed file &apos;{0}&apos; from folder &apos;{1}&apos;.
        /// </summary>
        public static string Debug_RemovedFileFromFolder {
            get {
                return ResourceManager.GetString("Debug_RemovedFileFromFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removed folder &apos;{0}&apos;.
        /// </summary>
        public static string Debug_RemovedFolder {
            get {
                return ResourceManager.GetString("Debug_RemovedFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removed reference &apos;{0}&apos; from project &apos;{1}&apos;.
        /// </summary>
        public static string Debug_RemoveReference {
            get {
                return ResourceManager.GetString("Debug_RemoveReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Each package is licensed to you by its owner. NuGet is not responsible for, nor does it grant any licenses to, third-party packages..
        /// </summary>
        public static string Dialog_DisclaimerText {
            get {
                return ResourceManager.GetString("Dialog_DisclaimerText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NuGet Package Manager.
        /// </summary>
        public static string DialogTitle {
            get {
                return ResourceManager.GetString("DialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t show again.
        /// </summary>
        public static string DoNotRemindAgain {
            get {
                return ResourceManager.GetString("DoNotRemindAgain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The project is invalid.
        /// </summary>
        public static string DTE_InvalidProject {
            get {
                return ResourceManager.GetString("DTE_InvalidProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The project &apos;{0}&apos; is unsupported.
        /// </summary>
        public static string DTE_ProjectUnsupported {
            get {
                return ResourceManager.GetString("DTE_ProjectUnsupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error reading &apos;{0}&apos;..
        /// </summary>
        public static string ErrorReadingFile {
            get {
                return ResourceManager.GetString("ErrorReadingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executing script file &apos;{0}&apos;..
        /// </summary>
        public static string ExecutingScript {
            get {
                return ResourceManager.GetString("ExecutingScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to add reference to &apos;{0}&apos;. Please make sure that it is in the Global Assembly Cache..
        /// </summary>
        public static string FailedToAddGacReference {
            get {
                return ResourceManager.GetString("FailedToAddGacReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to add reference to &apos;{0}&apos;..
        /// </summary>
        public static string FailedToAddReference {
            get {
                return ResourceManager.GetString("FailedToAddReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignore for now.
        /// </summary>
        public static string IgnoreUpgrade {
            get {
                return ResourceManager.GetString("IgnoreUpgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; already installed..
        /// </summary>
        public static string Log_PackageAlreadyInstalled {
            get {
                return ResourceManager.GetString("Log_PackageAlreadyInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to retrieve package list because no source was specified..
        /// </summary>
        public static string NoActivePackageSource {
            get {
                return ResourceManager.GetString("NoActivePackageSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No updates available for &apos;{0}&apos;..
        /// </summary>
        public static string NoUpdatesAvailable {
            get {
                return ResourceManager.GetString("NoUpdatesAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NuGet official package source.
        /// </summary>
        public static string OfficialSourceName {
            get {
                return ResourceManager.GetString("OfficialSourceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operation failed..
        /// </summary>
        public static string OperationFailed {
            get {
                return ResourceManager.GetString("OperationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; cannot be removed because it in use by &apos;{1}&apos;.
        /// </summary>
        public static string PackageCannotBeRemovedBecauseItIsInUse {
            get {
                return ResourceManager.GetString("PackageCannotBeRemovedBecauseItIsInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; was not installed in any project. Update failed..
        /// </summary>
        public static string PackageNotInstalledInAnyProject {
            get {
                return ResourceManager.GetString("PackageNotInstalledInAnyProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finished configuring this solution to restore NuGet packages on build..
        /// </summary>
        public static string PackageRestoreCompleted {
            get {
                return ResourceManager.GetString("PackageRestoreCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to configure this solution to restore missing NuGet packages during build? A .nuget folder will be added to the root of the solution that contains files that enable package restore..
        /// </summary>
        public static string PackageRestoreConfirmation {
            get {
                return ResourceManager.GetString("PackageRestoreConfirmation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading package &apos;{0}&apos; failed..
        /// </summary>
        public static string PackageRestoreDownloadPackageFailed {
            get {
                return ResourceManager.GetString("PackageRestoreDownloadPackageFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while configuring the solution to restore NuGet packages on build.
        /// </summary>
        public static string PackageRestoreErrorMessage {
            get {
                return ResourceManager.GetString("PackageRestoreErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while trying to restore packages. Please try again..
        /// </summary>
        public static string PackageRestoreErrorTryAgain {
            get {
                return ResourceManager.GetString("PackageRestoreErrorTryAgain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuring the solution to restore NuGet packages on build....
        /// </summary>
        public static string PackageRestoreWaitMessage {
            get {
                return ResourceManager.GetString("PackageRestoreWaitMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package source does not belong to the collection of available sources..
        /// </summary>
        public static string PackageSource_Invalid {
            get {
                return ResourceManager.GetString("PackageSource_Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; updated successfully..
        /// </summary>
        public static string PackageUpdatedSuccessfully {
            get {
                return ResourceManager.GetString("PackageUpdatedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No project was specified..
        /// </summary>
        public static string ProjectNotSpecified {
            get {
                return ResourceManager.GetString("ProjectNotSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _Restore.
        /// </summary>
        public static string RestoreButtonLabel {
            get {
                return ResourceManager.GetString("RestoreButtonLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Details.
        /// </summary>
        public static string ShowDetails {
            get {
                return ResourceManager.GetString("ShowDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to locate the solution directory. Please ensure that the solution has been saved..
        /// </summary>
        public static string SolutionDirectoryNotAvailable {
            get {
                return ResourceManager.GetString("SolutionDirectoryNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current environment does not have a solution loaded..
        /// </summary>
        public static string SolutionNotAvailable {
            get {
                return ResourceManager.GetString("SolutionNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package Installation Error.
        /// </summary>
        public static string TemplateWizard_ErrorDialogTitle {
            get {
                return ResourceManager.GetString("TemplateWizard_ErrorDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error accessing Extension Manager..
        /// </summary>
        public static string TemplateWizard_ExtensionManagerError {
            get {
                return ResourceManager.GetString("TemplateWizard_ExtensionManagerError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not add all required packages to the project. The following packages failed to install from &apos;{0}&apos;:.
        /// </summary>
        public static string TemplateWizard_FailedToInstallPackage {
            get {
                return ResourceManager.GetString("TemplateWizard_FailedToInstallPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The project template has a reference to a missing Extension. Could not find an Extension with ID &apos;{0}&apos;..
        /// </summary>
        public static string TemplateWizard_InvalidExtensionId {
            get {
                return ResourceManager.GetString("TemplateWizard_InvalidExtensionId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The project template lists one or more packages with missing, empty, or invalid values for the &quot;id&quot; or &quot;version&quot; attributes. Both attributes are required and must have valid values..
        /// </summary>
        public static string TemplateWizard_InvalidPackageElementAttributes {
            get {
                return ResourceManager.GetString("TemplateWizard_InvalidPackageElementAttributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &quot;repository&quot; attribute of the package element has an invalid value: &apos;{0}&apos;. Valid values are: &apos;template&apos; or &apos;extension&apos;..
        /// </summary>
        public static string TemplateWizard_InvalidRepositoryAttribute {
            get {
                return ResourceManager.GetString("TemplateWizard_InvalidRepositoryAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This template wizard can only be applied to single-project or project-item templates..
        /// </summary>
        public static string TemplateWizard_InvalidWizardRunKind {
            get {
                return ResourceManager.GetString("TemplateWizard_InvalidWizardRunKind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The project template is configured to use an Extension-specific package repository but the Extension ID has not been specified. Use the &quot;repositoryId&quot; attribute to specify the Extension ID..
        /// </summary>
        public static string TemplateWizard_MissingExtensionId {
            get {
                return ResourceManager.GetString("TemplateWizard_MissingExtensionId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding {0}.{1} to project....
        /// </summary>
        public static string TemplateWizard_PackageInstallStatus {
            get {
                return ResourceManager.GetString("TemplateWizard_PackageInstallStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find package &apos;{0}&apos; version &apos;{1}&apos; from the source &apos;{2}&apos;..
        /// </summary>
        public static string UnableToFindPackageFromSource {
            get {
                return ResourceManager.GetString("UnableToFindPackageFromSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find package &apos;{0}&apos;..
        /// </summary>
        public static string UnknownPackage {
            get {
                return ResourceManager.GetString("UnknownPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find package &apos;{0}&apos; in &apos;{1}&apos;..
        /// </summary>
        public static string UnknownPackageInProject {
            get {
                return ResourceManager.GetString("UnknownPackageInProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory &apos;{0}&apos; is not empty. Skipping....
        /// </summary>
        public static string Warning_DirectoryNotEmpty {
            get {
                return ResourceManager.GetString("Warning_DirectoryNotEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to generate binding redirects for &apos;{0}&apos;. {1}.
        /// </summary>
        public static string Warning_FailedToAddBindingRedirects {
            get {
                return ResourceManager.GetString("Warning_FailedToAddBindingRedirects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; already exists. Skipping....
        /// </summary>
        public static string Warning_FileAlreadyExists {
            get {
                return ResourceManager.GetString("Warning_FileAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install failed. Rolling back....
        /// </summary>
        public static string Warning_RollingBack {
            get {
                return ResourceManager.GetString("Warning_RollingBack", resourceCulture);
            }
        }
    }
}
