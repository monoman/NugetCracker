<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Debug_AddReference" xml:space="preserve">
    <value>Added reference '{0}' to project '{1}'</value>
  </data>
  <data name="Debug_RemovedFile" xml:space="preserve">
    <value>Removed file '{0}'</value>
  </data>
  <data name="Debug_RemovedFileFromFolder" xml:space="preserve">
    <value>Removed file '{0}' from folder '{1}'</value>
  </data>
  <data name="Debug_RemovedFolder" xml:space="preserve">
    <value>Removed folder '{0}'</value>
  </data>
  <data name="Debug_RemoveReference" xml:space="preserve">
    <value>Removed reference '{0}' from project '{1}'</value>
  </data>
  <data name="DTE_InvalidProject" xml:space="preserve">
    <value>The project is invalid</value>
  </data>
  <data name="DTE_ProjectUnsupported" xml:space="preserve">
    <value>The project '{0}' is unsupported</value>
  </data>
  <data name="Debug_AddedFileToProject" xml:space="preserve">
    <value>Added file '{0}' to project '{1}'</value>
  </data>
  <data name="PackageSource_Invalid" xml:space="preserve">
    <value>The package source does not belong to the collection of available sources.</value>
  </data>
  <data name="Console_DisclaimerText" xml:space="preserve">
    <value>Each package is licensed to you by its owner. NuGet is not responsible for, nor does it grant any licenses to, third-party packages. Some packages may include dependencies which are governed by additional licenses. Follow the package source (feed) URL to determine any dependencies.</value>
  </data>
  <data name="Dialog_DisclaimerText" xml:space="preserve">
    <value>Each package is licensed to you by its owner. NuGet is not responsible for, nor does it grant any licenses to, third-party packages.</value>
  </data>
  <data name="PackageCannotBeRemovedBecauseItIsInUse" xml:space="preserve">
    <value>'{0}' cannot be removed because it in use by '{1}'</value>
  </data>
  <data name="Console_InitializeHostFails" xml:space="preserve">
    <value>Failed to initialize the PowerShell host. If your PowerShell execution policy setting is set to AllSigned, open the Package Manager Console to initialize the host first.</value>
  </data>
  <data name="SolutionDirectoryNotAvailable" xml:space="preserve">
    <value>Unable to locate the solution directory. Please ensure that the solution has been saved.</value>
  </data>
  <data name="ErrorReadingFile" xml:space="preserve">
    <value>Error reading '{0}'.</value>
  </data>
  <data name="NoActivePackageSource" xml:space="preserve">
    <value>Unable to retrieve package list because no source was specified.</value>
  </data>
  <data name="ExecutingScript" xml:space="preserve">
    <value>Executing script file '{0}'.</value>
  </data>
  <data name="Console_HelpText" xml:space="preserve">
    <value>Type 'get-help NuGet' to see all available NuGet commands.</value>
  </data>
  <data name="UnableToFindPackageFromSource" xml:space="preserve">
    <value>Unable to find package '{0}' version '{1}' from the source '{2}'.</value>
  </data>
  <data name="UnknownPackage" xml:space="preserve">
    <value>Unable to find package '{0}'.</value>
  </data>
  <data name="NoUpdatesAvailable" xml:space="preserve">
    <value>No updates available for '{0}'.</value>
  </data>
  <data name="ProjectNotSpecified" xml:space="preserve">
    <value>No project was specified.</value>
  </data>
  <data name="UnknownPackageInProject" xml:space="preserve">
    <value>Unable to find package '{0}' in '{1}'.</value>
  </data>
  <data name="AmbiguousProjectLevelUninstal" xml:space="preserve">
    <value>Unable to find '{0}' in '{1}' and found multiple versions of '{0}' installed. Please specify a version.</value>
  </data>
  <data name="AmbiguousUninstall" xml:space="preserve">
    <value>Found multiple versions of '{0}' installed. Please specify a version.</value>
  </data>
  <data name="AmbiguousUpdate" xml:space="preserve">
    <value>Unable to update '{0}'. Found multiple versions installed.</value>
  </data>
  <data name="AggregateSourceName" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="OfficialSourceName" xml:space="preserve">
    <value>NuGet official package source</value>
  </data>
  <data name="FailedToAddGacReference" xml:space="preserve">
    <value>Failed to add reference to '{0}'. Please make sure that it is in the Global Assembly Cache.</value>
  </data>
  <data name="FailedToAddReference" xml:space="preserve">
    <value>Failed to add reference to '{0}'.</value>
  </data>
  <data name="Log_PackageAlreadyInstalled" xml:space="preserve">
    <value>'{0}' already installed.</value>
  </data>
  <data name="Warning_FailedToAddBindingRedirects" xml:space="preserve">
    <value>Failed to generate binding redirects for '{0}'. {1}</value>
  </data>
  <data name="Warning_FileAlreadyExists" xml:space="preserve">
    <value>'{0}' already exists. Skipping...</value>
  </data>
  <data name="AskForUpdateMessage" xml:space="preserve">
    <value>A new version of NuGet Package Manager is available.</value>
  </data>
  <data name="ShowDetails" xml:space="preserve">
    <value>Show Details</value>
  </data>
  <data name="DoNotRemindAgain" xml:space="preserve">
    <value>Don't show again</value>
  </data>
  <data name="IgnoreUpgrade" xml:space="preserve">
    <value>Ignore for now</value>
  </data>
  <data name="Warning_DirectoryNotEmpty" xml:space="preserve">
    <value>Directory '{0}' is not empty. Skipping...</value>
  </data>
  <data name="Warning_RollingBack" xml:space="preserve">
    <value>Install failed. Rolling back...</value>
  </data>
  <data name="PackageNotInstalledInAnyProject" xml:space="preserve">
    <value>'{0}' was not installed in any project. Update failed.</value>
  </data>
  <data name="PackageUpdatedSuccessfully" xml:space="preserve">
    <value>'{0}' updated successfully.</value>
  </data>
  <data name="OperationFailed" xml:space="preserve">
    <value>Operation failed.</value>
  </data>
  <data name="TemplateWizard_ErrorDialogTitle" xml:space="preserve">
    <value>Package Installation Error</value>
  </data>
  <data name="TemplateWizard_InvalidRepositoryAttribute" xml:space="preserve">
    <value>The "repository" attribute of the package element has an invalid value: '{0}'. Valid values are: 'template' or 'extension'.</value>
  </data>
  <data name="TemplateWizard_InvalidWizardRunKind" xml:space="preserve">
    <value>This template wizard can only be applied to single-project or project-item templates.</value>
  </data>
  <data name="TemplateWizard_FailedToInstallPackage" xml:space="preserve">
    <value>Could not add all required packages to the project. The following packages failed to install from '{0}':</value>
  </data>
  <data name="TemplateWizard_PackageInstallStatus" xml:space="preserve">
    <value>Adding {0}.{1} to project...</value>
  </data>
  <data name="TemplateWizard_MissingExtensionId" xml:space="preserve">
    <value>The project template is configured to use an Extension-specific package repository but the Extension ID has not been specified. Use the "repositoryId" attribute to specify the Extension ID.</value>
  </data>
  <data name="TemplateWizard_InvalidExtensionId" xml:space="preserve">
    <value>The project template has a reference to a missing Extension. Could not find an Extension with ID '{0}'.</value>
  </data>
  <data name="TemplateWizard_InvalidPackageElementAttributes" xml:space="preserve">
    <value>The project template lists one or more packages with missing, empty, or invalid values for the "id" or "version" attributes. Both attributes are required and must have valid values.</value>
  </data>
  <data name="SolutionNotAvailable" xml:space="preserve">
    <value>The current environment does not have a solution loaded.</value>
  </data>
  <data name="TemplateWizard_ExtensionManagerError" xml:space="preserve">
    <value>Error accessing Extension Manager.</value>
  </data>
  <data name="DialogTitle" xml:space="preserve">
    <value>NuGet Package Manager</value>
  </data>
  <data name="PackageRestoreCompleted" xml:space="preserve">
    <value>Finished configuring this solution to restore NuGet packages on build.</value>
  </data>
  <data name="PackageRestoreWaitMessage" xml:space="preserve">
    <value>Configuring the solution to restore NuGet packages on build...</value>
  </data>
  <data name="PackageRestoreErrorMessage" xml:space="preserve">
    <value>An error occurred while configuring the solution to restore NuGet packages on build</value>
  </data>
  <data name="PackageRestoreDownloadPackageFailed" xml:space="preserve">
    <value>Downloading package '{0}' failed.</value>
  </data>
  <data name="PackageRestoreConfirmation" xml:space="preserve">
    <value>Do you want to configure this solution to restore missing NuGet packages during build? A .nuget folder will be added to the root of the solution that contains files that enable package restore.</value>
  </data>
  <data name="AskForRestoreMessage" xml:space="preserve">
    <value>Some NuGet packages are missing from this solution. Click to restore.</value>
  </data>
  <data name="RestoreButtonLabel" xml:space="preserve">
    <value>_Restore</value>
  </data>
  <data name="PackageRestoreErrorTryAgain" xml:space="preserve">
    <value>An error occurred while trying to restore packages. Please try again.</value>
  </data>
</root>