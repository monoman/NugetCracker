@* Generator : Template TypeVisibility : Internal *@
@using System.Globalization
@using Microsoft.CSharp
@functions {
    public NuGet.CommandAttribute CommandAttribute { get; set; }

    public IEnumerable<dynamic> Options { get; set; } 
    
    private TextInfo TextInfo {
        get { return CultureInfo.CurrentCulture.TextInfo; }
    }
}

##  @TextInfo.ToTitleCase(CommandAttribute.CommandName) Command

@CommandAttribute.Description

### Usage
    nuget @TextInfo.ToLower(CommandAttribute.CommandName) @CommandAttribute.UsageSummary
@if(!String.IsNullOrEmpty(CommandAttribute.UsageDescription)) {
@:
    @(CommandAttribute.UsageDescription ?? "")      
}

### Options
<table>
@foreach (var option in Options) {
    <tr>
        <td>@option.Name</td>
        <td>@option.Description</td>
    </tr>
}
</table>
@if (!String.IsNullOrEmpty(CommandAttribute.UsageExample)) {
<text>
### Examples

    @CommandAttribute.UsageExample.Replace(Environment.NewLine, Environment.NewLine + "    ")
</text>
}